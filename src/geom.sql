DELETE FROM track;

DROP TABLE IF EXISTS track_geoms;
DROP TABLE IF EXISTS track;

CREATE TABLE track (
    tid     integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    name    varchar(100) NOT NULL CHECK (name <> '')
);

CREATE TABLE track_geoms (
    gid     integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    tid   integer REFERENCES track(tid) ON DELETE CASCADE,
    geom    geometry(POINTZ, 4326) NOT NULL,
    properties text NOT NULL,
    geom_order integer NOT NULL
);

-- VACUUM ANALYZE [track] [(geom)]

-- SELECT * FROM geometry_columns;
-- SELECT * FROM geography_columns;
-- SELECT * FROM spatial_ref_sys;

-- Inserting track
INSERT INTO track (name) VALUES ('my track')

-- Inserting track
WITH feature_collection AS (
    SELECT '{"type":"FeatureCollection","features":[{"type":"Feature","geometry":{"type":"Point","coordinates":[-110.9241766,45.6090303,1654.311]},"properties":{"ele":1654.311,"time":"2017-09-01T20:18:06.999Z"}},{"type":"Feature","geometry":{"type":"Point","coordinates":[-110.9241766,45.6090303,1653.885]},"properties":{"ele":1653.885,"time":"2017-09-01T20:18:24.999Z"}},{"type":"Feature","geometry":{"type":"Point","coordinates":[-110.9241766,45.6090303,1653.418]},"properties":{"ele":1653.418,"time":"2017-09-01T20:18:33.894Z"}}]}'::json AS fc
)
INSERT INTO track_geoms (tid, geom, properties, geom_order)
SELECT
    1,
    ST_SetSRID(ST_GeomFromGeoJSON(feat->>'geometry'), 4326),
    feat->'properties',
    row_number() OVER ()
FROM (
    SELECT json_array_elements(fc->'features') AS feat
    FROM feature_collection
) AS f;


-- Inserting both at the same time
WITH inserted_track AS (
    INSERT INTO track (name) VALUES ('my track')
    RETURNING tid AS track_id
), feature_collection AS (
    SELECT '{"type":"FeatureCollection","features":[{"type":"Feature","geometry":{"type":"Point","coordinates":[-110.9241766,45.6090303,1654.311]},"properties":{"ele":1654.311,"time":"2017-09-01T20:18:06.999Z"}},{"type":"Feature","geometry":{"type":"Point","coordinates":[-110.9241766,45.6090303,1653.885]},"properties":{"ele":1653.885,"time":"2017-09-01T20:18:24.999Z"}},{"type":"Feature","geometry":{"type":"Point","coordinates":[-110.9241766,45.6090303,1653.418]},"properties":{"ele":1653.418,"time":"2017-09-01T20:18:33.894Z"}}]}'::json AS fc
)
INSERT INTO track_geoms (tid, geom, properties, geom_order)
SELECT
    track_id,
    ST_SetSRID(ST_GeomFromGeoJSON(feat->>'geometry'), 4326),
    feat->'properties',
    row_number() OVER ()
FROM (
    SELECT
      json_array_elements(fc->'features') AS feat,
      inserted_track.track_id
    FROM feature_collection, inserted_track
) AS f;


-- SELECT * FROM track
-- SELECT * FROM track_geoms

-- SELECT *
-- FROM track AS t
-- JOIN track_geoms AS g ON t.tid = g.tid;

-- Selecting feature collection ... Wooooo!!!
SELECT json_build_object(
    'type',     'FeatureCollection',
    'features', json_agg(json_build_object(
        'type',       'Feature',
        'geometry',   results.geom::json,
        'properties', results.properties::json
    ))
)
FROM (
    SELECT
        ST_AsGeoJSON(geom) AS geom,
        properties AS properties
    FROM track_geoms
    WHERE tid = 1
    ORDER BY geom_order
) results;