docker container run --rm --name test -it custom-postgres /bin/bash
docker container run --rm --name test -it custom-php /bin/bash

/etc/init.d/postgresql start

psql -d docker

# start sql statements

\q    # quit
\!    # run host command ( ex: \! clear )
\a    # change query alignment

INSERT INTO tracks (name) VALUES ('my track')

WITH data AS (
    SELECT '{"type":"FeatureCollection","features":[{"type":"Feature","geometry":{"type":"Point","coordinates":[-110.9241766,45.6090303,1654.311]},"properties":{"ele":1654.311,"time":"2017-09-01T20:18:06.999Z"}},{"type":"Feature","geometry":{"type":"Point","coordinates":[-110.9241766,45.6090303,1653.885]},"properties":{"ele":1653.885,"time":"2017-09-01T20:18:24.999Z"}},{"type":"Feature","geometry":{"type":"Point","coordinates":[-110.9241766,45.6090303,1653.418]},"properties":{"ele":1653.418,"time":"2017-09-01T20:18:33.894Z"}}]}'::json AS fc
)
SELECT
    row_number() OVER () AS gid,
    ST_AsText(ST_GeomFromGeoJSON(feat->>'geometry')) AS geom,
    feat->'properties' AS properties
FROM (
    SELECT json_array_elements(fc->'features') AS feat
    FROM data
) AS f;







# WITH moved_rows AS (
#     DELETE FROM products
#     WHERE
#         "date" >= '2010-10-01' AND
#         "date" < '2010-11-01'
#     RETURNING *
# )
# INSERT INTO products_log
# SELECT * FROM moved_rows;









# INSERT INTO track_geoms (tid, geom, properties, order)
#   select column1, column2 from some_table;


# CREATE TABLE tracks (
#     tid     integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
#     name    varchar(100) NOT NULL CHECK (name <> '')
# )

# CREATE TABLE track_geoms (
#     gid     integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
#     tid   integer REFERENCES tracks(tid),
#     geom    geometry(POINTZ, 4326) NOT NULL
#     properties text NOT NULL
#     order integer NOT NULL
# )